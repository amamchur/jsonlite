//
//  main.m
//  Base64
//
//  Created by Andrii Mamchur on 11/14/13.
//  Copyright (c) 2019 Andrii Mamchur. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "JsonLiteObjC/JsonLiteObjC.h"

static uint8_t BinaryData[] = {
    0x89,0x50,0x4e,0x47,0x0d,0x0a,0x1a,0x0a,0x00,0x00,0x00,0x0d,0x49,0x48,0x44,0x52,
    0x00,0x00,0x00,0x0a,0x00,0x00,0x00,0x0a,0x08,0x06,0x00,0x00,0x00,0x8d,0x32,0xcf,
    0xbd,0x00,0x00,0x00,0x06,0x62,0x4b,0x47,0x44,0x00,0xff,0x00,0xff,0x00,0xff,0xa0,
    0xbd,0xa7,0x93,0x00,0x00,0x00,0x07,0x74,0x49,0x4d,0x45,0x07,0xd6,0x08,0x03,0x0b,
    0x03,0x00,0x0d,0x0e,0x0d,0x9f,0x00,0x00,0x00,0x55,0x49,0x44,0x41,0x54,0x18,0x95,
    0x8d,0x90,0xc1,0x09,0x00,0x31,0x08,0x04,0x47,0x1b,0x48,0x39,0x17,0x52,0x77,0xd2,
    0x82,0x70,0x55,0x79,0x9f,0x0b,0x48,0x08,0xe2,0xc2,0x3c,0x84,0x41,0x74,0x85,0x10,
    0x87,0x07,0x18,0xff,0x68,0x02,0x2f,0x87,0xd0,0x1c,0xa6,0x83,0x1f,0x4c,0x87,0x16,
    0xc5,0x75,0x91,0x36,0x6b,0x4b,0x3d,0x91,0x36,0x5d,0xc3,0x4d,0x59,0x86,0x16,0x24,
    0x00,0x14,0xb0,0x82,0x67,0xf5,0x67,0xaa,0xf5,0x48,0xdc,0x9f,0x15,0xfe,0x01,0x67,
    0xe6,0x54,0x13,0x17,0x0d,0x51,0x05,0x00,0x00,0x00,0x00,0x49,0x45,0x4e,0x44,0xae,
    0x42,0x60,0x82
};

@interface Base64Model : NSObject

@property (copy, nonatomic) NSString *message;
@property (copy, nonatomic) NSData *base64;

@end

@implementation Base64Model

- (void)dealloc {
    self.message = nil;
    self.base64 = nil;
}

@end

NSData *createJsonData() {
    Base64Model *model = [[Base64Model alloc] init];
    model.message = @"Base64 Example";
    model.base64 = [NSData dataWithBytes:BinaryData length:sizeof(BinaryData)];
    JsonLiteSerializer *serializer = [JsonLiteSerializer serializer];
    serializer.converter = [[JsonLiteBase64 alloc] init];
    serializer.indentation = 4;
    return [serializer serializeObject:model];
}

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        NSData *json = createJsonData();
        NSLog(@"%@\n", [[NSString alloc] initWithData:json encoding:NSUTF8StringEncoding]);
        
        JsonLiteParser *parser = [JsonLiteParser parser];
        JsonLiteDeserializer *deserializer = [JsonLiteDeserializer deserializerWithRootClass:[Base64Model class]];
        deserializer.converter = [[JsonLiteBase64 alloc] init];
        parser.delegate = deserializer;
        [parser parse:json];
        
        Base64Model *model = [deserializer object];
        NSLog(@"Message - %@\n", model.message);
        NSLog(@"Data - %@\n", model.base64);
    }
    return 0;
}

